// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             (unknown)
// source: bartender/v1/bartender.proto

package bartenderv1

import (
	grpc "google.golang.org/grpc"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const ()

// BartenderServiceClient is the client API for BartenderService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type BartenderServiceClient interface {
}

type bartenderServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewBartenderServiceClient(cc grpc.ClientConnInterface) BartenderServiceClient {
	return &bartenderServiceClient{cc}
}

// BartenderServiceServer is the server API for BartenderService service.
// All implementations should embed UnimplementedBartenderServiceServer
// for forward compatibility
type BartenderServiceServer interface {
}

// UnimplementedBartenderServiceServer should be embedded to have forward compatible implementations.
type UnimplementedBartenderServiceServer struct {
}

// UnsafeBartenderServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to BartenderServiceServer will
// result in compilation errors.
type UnsafeBartenderServiceServer interface {
	mustEmbedUnimplementedBartenderServiceServer()
}

func RegisterBartenderServiceServer(s grpc.ServiceRegistrar, srv BartenderServiceServer) {
	s.RegisterService(&BartenderService_ServiceDesc, srv)
}

// BartenderService_ServiceDesc is the grpc.ServiceDesc for BartenderService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var BartenderService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "bartender.v1.BartenderService",
	HandlerType: (*BartenderServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams:     []grpc.StreamDesc{},
	Metadata:    "bartender/v1/bartender.proto",
}
