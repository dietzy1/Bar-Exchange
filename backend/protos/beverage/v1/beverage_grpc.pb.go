// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             (unknown)
// source: beverage/v1/beverage.proto

package beveragev1

import (
	grpc "google.golang.org/grpc"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const ()

// BeverageServiceClient is the client API for BeverageService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type BeverageServiceClient interface {
}

type beverageServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewBeverageServiceClient(cc grpc.ClientConnInterface) BeverageServiceClient {
	return &beverageServiceClient{cc}
}

// BeverageServiceServer is the server API for BeverageService service.
// All implementations should embed UnimplementedBeverageServiceServer
// for forward compatibility
type BeverageServiceServer interface {
}

// UnimplementedBeverageServiceServer should be embedded to have forward compatible implementations.
type UnimplementedBeverageServiceServer struct {
}

// UnsafeBeverageServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to BeverageServiceServer will
// result in compilation errors.
type UnsafeBeverageServiceServer interface {
	mustEmbedUnimplementedBeverageServiceServer()
}

func RegisterBeverageServiceServer(s grpc.ServiceRegistrar, srv BeverageServiceServer) {
	s.RegisterService(&BeverageService_ServiceDesc, srv)
}

// BeverageService_ServiceDesc is the grpc.ServiceDesc for BeverageService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var BeverageService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "beverage.v1.BeverageService",
	HandlerType: (*BeverageServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams:     []grpc.StreamDesc{},
	Metadata:    "beverage/v1/beverage.proto",
}
