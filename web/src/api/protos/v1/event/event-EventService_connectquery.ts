// @generated by protoc-gen-connect-query v0.4.1 with parameter "target=ts"
// @generated from file protos/v1/event/event.proto (package event.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { createQueryService } from "@bufbuild/connect-query";
import { MethodKind } from "@bufbuild/protobuf";
import { GetEventRequest, GetEventResponse, StartEventRequest, StartEventResponse, StopEventRequest, StopEventResponse } from "./event_pb.js";

export const typeName = "event.v1.EventService";

/**
 * @generated from rpc event.v1.EventService.StartEvent
 */
export const startEvent = createQueryService({
  service: {
    methods: {
      startEvent: {
        name: "StartEvent",
        kind: MethodKind.Unary,
        I: StartEventRequest,
        O: StartEventResponse,
      },
    },
    typeName: "event.v1.EventService",
  },
}).startEvent;

/**
 * @generated from rpc event.v1.EventService.StopEvent
 */
export const stopEvent = createQueryService({
  service: {
    methods: {
      stopEvent: {
        name: "StopEvent",
        kind: MethodKind.Unary,
        I: StopEventRequest,
        O: StopEventResponse,
      },
    },
    typeName: "event.v1.EventService",
  },
}).stopEvent;

/**
 * @generated from rpc event.v1.EventService.GetEvent
 */
export const getEvent = createQueryService({
  service: {
    methods: {
      getEvent: {
        name: "GetEvent",
        kind: MethodKind.Unary,
        I: GetEventRequest,
        O: GetEventResponse,
      },
    },
    typeName: "event.v1.EventService",
  },
}).getEvent;
